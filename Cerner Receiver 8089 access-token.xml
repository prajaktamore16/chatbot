<connector version="3.9.1">
  <metaDataId>5</metaDataId>
  <name>access-token</name>
  <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.9.1">
    <pluginProperties/>
    <destinationConnectorProperties version="3.9.1">
      <queueEnabled>false</queueEnabled>
      <sendFirst>false</sendFirst>
      <retryIntervalMillis>10000</retryIntervalMillis>
      <regenerateTemplate>false</regenerateTemplate>
      <retryCount>0</retryCount>
      <rotate>false</rotate>
      <includeFilterTransformer>false</includeFilterTransformer>
      <threadCount>1</threadCount>
      <threadAssignmentVariable></threadAssignmentVariable>
      <validateResponse>false</validateResponse>
      <resourceIds class="linked-hash-map">
        <entry>
          <string>Default Resource</string>
          <string>[Default Resource]</string>
        </entry>
      </resourceIds>
      <queueBufferSize>1000</queueBufferSize>
      <reattachAttachments>true</reattachAttachments>
    </destinationConnectorProperties>
    <script>
var eventData = sourceMap.get(&apos;parameters&apos;);

 var grant_type=eventData.getParameter(&apos;grant_type&apos;);
 var scope=eventData.getParameter(&apos;scope&apos;);


var channelAPI = globalMap.get(&apos;channel_Capi_sender&apos;);



var baseMap = Maps.map()
	.add(&apos;sourceChannelId&apos;, channelId)
	.add(&apos;sourceChannelName&apos;, channelName)
	.add(&apos;sourceMessageId&apos;, connectorMessage.getMessageId().toString())
	.add(&apos;eventData&apos;,eventData)
	.add(&apos;grant_type&apos;,grant_type)
	.add(&apos;scope&apos;,scope);

logger.info(&quot;event data=&quot;+eventData);
	
var postRequest = new RawMessage(&quot;&quot;, [4], baseMap);
var postResponse = router.routeMessageByChannelId(channelAPI, postRequest);

logger.info(&quot;response =&quot;+postResponse);
//if (postResponse.getStatus() != &apos;SENT&apos;) {
//channelMap.put(&apos;http-status-code&apos;, &apos;400&apos;);
//channelMap.put(&apos;http-content-type&apos;, &apos;application/json&apos;);
//logger.info(&quot;error=&quot;+postResponse.getError());
//return postResponse ;
//}

     channelMap.put(&apos;http-status-code&apos;, &apos;200&apos;);
	channelMap.put(&apos;http-content-type&apos;, &apos;application/json&apos;);
return postResponse;</script>
  </properties>
  <transformer version="3.9.1">
    <elements/>
    <inboundDataType>RAW</inboundDataType>
    <outboundDataType>RAW</outboundDataType>
    <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.9.1">
      <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.9.1">
        <splitType>JavaScript</splitType>
        <batchScript></batchScript>
      </batchProperties>
    </inboundProperties>
    <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.9.1">
      <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.9.1">
        <splitType>JavaScript</splitType>
        <batchScript></batchScript>
      </batchProperties>
    </outboundProperties>
  </transformer>
  <responseTransformer version="3.9.1">
    <elements/>
    <inboundDataType>RAW</inboundDataType>
    <outboundDataType>RAW</outboundDataType>
    <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.9.1">
      <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.9.1">
        <splitType>JavaScript</splitType>
        <batchScript></batchScript>
      </batchProperties>
    </inboundProperties>
    <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.9.1">
      <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.9.1">
        <splitType>JavaScript</splitType>
        <batchScript></batchScript>
      </batchProperties>
    </outboundProperties>
  </responseTransformer>
  <filter version="3.9.1">
    <elements/>
  </filter>
  <transportName>JavaScript Writer</transportName>
  <mode>DESTINATION</mode>
  <enabled>true</enabled>
  <waitForPrevious>true</waitForPrevious>
</connector>